
import 'dart:async';

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

//This file is automatically generated. DO NOT EDIT, all your changes would be lost.

class S implements WidgetsLocalizations {
  const S();

  static const GeneratedLocalizationsDelegate delegate =
      const GeneratedLocalizationsDelegate();

  static S of(BuildContext context) =>
      Localizations.of<S>(context, WidgetsLocalizations);

  @override
  TextDirection get textDirection => TextDirection.ltr;

  String get AvoidThisStringsIfisNotPlural => "Zero One Two Few Many Other";
  String get CANCEL => "CANCEL";
  String get CLOSE => "CLOSE";
  String get DELETE => "DELETE";
  String get NASAAck => "We acknowledge the use of data and imagery from LANCE FIRMS operated by the NASA/GSFC/Earth Science Data and Information System (ESDIS) with funding provided by NASA/HQ.";
  String get SAVE => "SAVE";
  String get SHOW => "SHOW";
  String get UNDO => "UNDO";
  String get aDay => "a day";
  String get aF3wSeconds => "a few seconds";
  String get aMinute => "a minute";
  String get aMonth => "a month";
  String get aYear => "a year";
  String get activeFires => "Active fires";
  String get addSomePlace => "Add some other place";
  String get addYourCurrentPosition => "Add your current position";
  String get addedThisLocation => "You have already added this location";
  String get alertWhenThereIsAFire => "Alert when there is a fire";
  String get anHour => "an hour";
  String get appMoto => "Strengthening neighborhoods against wildfires";
  String get appName => "All Against The Fire!";
  String get areYouSureTitle => "Are you sure?";
  String get callEmergencyServicesDescription => "You should call 112 if you have not already done so to notify the emergency services.";
  String get callEmergencyServicesTitle => "Call 112";
  String get chooseAPlace => "Choose a place";
  String get chooseAWatchRadio => "Choose a watch radio";
  String get confirm => "Confirm";
  String get deleteAllFireNotificationsAlertDescription => "This will remove all your fire notifications";
  String get errorFirePlaceDialog => "We couldn't get the location of the fire";
  String get fireNotificationTitle => "Fire Notification";
  String get fireNotificationsDescription => "Here you will receive fire notifications in locations you are subscribed to";
  String get fireNotificationsTitle => "Fire Notifications";
  String get fireNotificationsTitleShort => "Notifications";
  String get firesInTheWorld => "Active fires in the world";
  String get firesInYourPlaces => "Active fires in your places";
  String get firesNearPlace => "Fires near other place";
  String get getAlertsOfFiresinThatArea => "Get alerts of fires in that area";
  String get isYourUbicationEnabled => "I cannot get your current location. It's your ubication enabled?";
  String get noConnectivity => "This application needs an Internet connection to work";
  String get noFiresAround => "There is no fires";
  String get notPermsUbication => "We don't have permission to get your location";
  String get notifyAFire => "Notify a fire";
  String get privacyPolicy => "Privacy Policy";
  String get supportPageDescription => "You can support this initiative, spreading the word, helping us to develop our software, translating this app to your language, suggesting other public data sources of fires to use, etc.";
  String get supportThisInitiative => "Support this initiative";
  String get toDeleteThisNotification => "Slide horizontally to delete this notification";
  String get toDeleteThisPlace => "Slide horizontally to delete this place";
  String get toFiresNotifications => "Subscribe to fires notifications";
  String get tweetAboutAFireDescription => "Additionally if you use twitter you can share additional information with the emergency services, for example, attaching photos to the tweet if you have good visibility of the fire, when you took the photos, exact location, etc. Use #hashtags type #IFMinicipalTerminal for example #IFJumilla (Forest Fire in Jumilla).";
  String get tweetAboutAFireTitle => "Tweet about";
  String get typeTheNameOfAPlace => "Type the name of a place, region, etc";
  String get unsubscribe => "Unsubscribe";
  String get warningThisIsAVeryLargeArea => "Warning: this is a very large area";
  String get youDeletedThisPlace => "You deleted this place";
  String activeFiresWorldWide(String activeFires) => "$activeFires active fires worldwide";
  String appLicense(String thisYear) => "(c) 2017-$thisYear Comunes Association under the GNU Affero GPL v3";
  String fireAroundThisArea(String kmAround) => "A fire at $kmAround км around this area";
  String firesAroundThisArea(String numFires, String kmAround) => "$numFires fires at $kmAround км around this area";
  String inDays(String value) => "$value days";
  String inHours(String value) => "$value hours";
  String inMinutes(String value) => "$value minutes";
  String inMonths(String value) => "$value months";
  String inSomething(String something) => "in $something";
  String inYears(String value) => "$value years";
  String noFiresAroundThisArea(String kmAround) => "There is no fires at $kmAround км around this area";
  String somethingAgo(String something) => "$something ago";
  String subscribeToValueAroundThisArea(String sliderValue) => "Subscribe to $sliderValue км around this area";
  String updatedLastCheck(String lastCheck) => "Updated $lastCheck";
}

class en extends S {
  const en();
}

class es extends S {
  const es();

   @override
  TextDirection get textDirection => TextDirection.ltr;

  @override
  String get addYourCurrentPosition => "Añade tu ubicación actual";
  @override
  String get toDeleteThisNotification => "Desliza horizontalmente para borrar esta notificación";
  @override
  String get alertWhenThereIsAFire => "Alerta cuando hay un fuego";
  @override
  String get fireNotificationsDescription => "Aquí recibirás las notificaciones de fuegos en los lugares a los que te subscribas";
  @override
  String get anHour => "una hora";
  @override
  String get areYouSureTitle => "¿Seguro?";
  @override
  String get notifyAFire => "Notificar un fuego";
  @override
  String get callEmergencyServicesDescription => "Deberías llamar al 112 si no lo has hecho ya para avisar a los servicios de emergencia.";
  @override
  String get CLOSE => "CERRAR";
  @override
  String get errorFirePlaceDialog => "No hemos podido obtener la ubicación del fuego";
  @override
  String get toDeleteThisPlace => "Desliza horizontalmente para borrar este lugar";
  @override
  String get deleteAllFireNotificationsAlertDescription => "Esto borrará todas las notificaciones de fuegos";
  @override
  String get tweetAboutAFireDescription => "Adicionalmente si usas twitter puedes compartir información adicional con los servicios de emergencia, por ejemplo, adjuntando fotos al tweet si tienes buena visibilidad del fuego, cuando tomaste las fotos, ubicación exacta, etc. Usa #hashtags tipo #IFTerminoMunicipal por ejemplo #IFJumilla (Incendio Forestal en Jumilla).";
  @override
  String get noConnectivity => "Esta aplicación necesita una conexión a Internet para funcionar";
  @override
  String get AvoidThisStringsIfisNotPlural => "Zero One Two Few Many Other";
  @override
  String get unsubscribe => "Desuscríbete";
  @override
  String get supportThisInitiative => "Apoya esta iniciativa";
  @override
  String get toFiresNotifications => "Suscríbete a alertas de fuegos";
  @override
  String get notPermsUbication => "No tenemos permisos para conocer tu ubicación";
  @override
  String get fireNotificationTitle => "Notificación de fuego";
  @override
  String get youDeletedThisPlace => "Has borrado este lugar";
  @override
  String get callEmergencyServicesTitle => "Llama al 112";
  @override
  String get noFiresAround => "Sin fuegos";
  @override
  String get chooseAPlace => "Elige un lugar";
  @override
  String get firesNearPlace => "Fuegos cercanos a ti";
  @override
  String get aYear => "un año";
  @override
  String get UNDO => "DESHACER";
  @override
  String get tweetAboutAFireTitle => "Twittea";
  @override
  String get supportPageDescription => "Puedes apoyar esta iniciativa, dando difusión, ayudándonos a desarrollar nuestro software, traduciendo esta aplicación a tu idioma, sugeriendo otras fuentes de datos públicas de fuegos para usar, etc.";
  @override
  String get aMinute => "un minuto";
  @override
  String get fireNotificationsTitle => "Notificaciones de fuegos";
  @override
  String get firesInYourPlaces => "Fuegos en tus lugares";
  @override
  String get NASAAck => "Reconocemos el uso de datos e imágenes de LANCE FIRMS operadas por NASA/GSFC/Earth Science Data and Information System (ESDIS) con fondos proporcionados por NASA/HQ.";
  @override
  String get isYourUbicationEnabled => "No podemos saber tu ubicación actual. ¿Están los servicios de ubicación en tu móvil activados?";
  @override
  String get fireNotificationsTitleShort => "Notificaciones";
  @override
  String get DELETE => "BORRAR";
  @override
  String get aDay => "un día";
  @override
  String get SAVE => "GUARDAR";
  @override
  String get SHOW => "MOSTRAR";
  @override
  String get addedThisLocation => "Ya has añadido este lugar antes";
  @override
  String get typeTheNameOfAPlace => "Escribe el nombre de un lugar, zona, etc";
  @override
  String get appName => "¡Tod@s contra el Fuego!";
  @override
  String get aF3wSeconds => "unos segundos";
  @override
  String get privacyPolicy => "Política de Privacidad";
  @override
  String get activeFires => "Fuegos activos";
  @override
  String get aMonth => "un mes";
  @override
  String get firesInTheWorld => "Fuegos en el mundo";
  @override
  String get addSomePlace => "Añade otro lugar";
  @override
  String get confirm => "Confirmar";
  @override
  String get getAlertsOfFiresinThatArea => "Recibe alertas de fuegos en esa zona";
  @override
  String get warningThisIsAVeryLargeArea => "Cuidado: esta zona es muy grande";
  @override
  String get appMoto => "Fortaleciendo vecindarios contra incendios forestales";
  @override
  String get chooseAWatchRadio => "Elige un radio de vigilancia";
  @override
  String get CANCEL => "CANCELAR";
  @override
  String inMonths(String value) => "$value meses";
  @override
  String inYears(String value) => "$value años";
  @override
  String noFiresAroundThisArea(String kmAround) => "No hay fuegos a $kmAround км a la redonda";
  @override
  String firesAroundThisArea(String numFires, String kmAround) => "$numFires fuegos a $kmAround км a la redonda";
  @override
  String appLicense(String thisYear) => "(c) 2017-$thisYear Asociación Comunes bajo licencia GNU Affero GPL v3";
  @override
  String somethingAgo(String something) => "hace $something";
  @override
  String subscribeToValueAroundThisArea(String sliderValue) => "Suscríbete a $sliderValue км a la redonda";
  @override
  String inHours(String value) => "$value horas";
  @override
  String updatedLastCheck(String lastCheck) => "Actualizado $lastCheck";
  @override
  String inDays(String value) => "$value días";
  @override
  String activeFiresWorldWide(String activeFires) => "$activeFires fuegos activos en el mundo";
  @override
  String fireAroundThisArea(String kmAround) => "Un fuego a $kmAround км a la redonda";
  @override
  String inSomething(String something) => "en $something";
  @override
  String inMinutes(String value) => "$value minutos";
}


class GeneratedLocalizationsDelegate extends LocalizationsDelegate<WidgetsLocalizations> {
  const GeneratedLocalizationsDelegate();

  List<Locale> get supportedLocales {
    return const <Locale>[

      const Locale("en", ""),
      const Locale("es", ""),

    ];
  }

  LocaleResolutionCallback resolution({Locale fallback}) {
    return (Locale locale, Iterable<Locale> supported) {
      final Locale languageLocale = new Locale(locale.languageCode, "");
      if (supported.contains(locale))
        return locale;
      else if (supported.contains(languageLocale))
        return languageLocale;
      else {
        final Locale fallbackLocale = fallback ?? supported.first;
        return fallbackLocale;
      }
    };
  }

  @override
  Future<WidgetsLocalizations> load(Locale locale) {
    final String lang = getLang(locale);
    switch (lang) {

      case "en":
        return new SynchronousFuture<WidgetsLocalizations>(const en());
      case "es":
        return new SynchronousFuture<WidgetsLocalizations>(const es());

      default:
        return new SynchronousFuture<WidgetsLocalizations>(const S());
    }
  }

  @override
  bool isSupported(Locale locale) => supportedLocales.contains(locale);

  @override
  bool shouldReload(GeneratedLocalizationsDelegate old) => false;
}

String getLang(Locale l) => l.countryCode != null && l.countryCode.isEmpty
    ? l.languageCode
    : l.toString();
